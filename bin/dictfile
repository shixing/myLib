#!/usr/bin/env python

import sys

def help_message():
    print \
        'usage:\t dictfile file1 file2 i|u|d  \n' \
        '\t i intersection \n' \
        '\t u union \n'\
        '\t d union-intersection \n'

def toSet(fn):
    f = open(fn)
    s = set([x.strip() for x in f.readlines()])
    return s

def printSet(s):
    l = list(s)
    l = sorted(l)
    for ll in l:
        print ll

def printDiff(s1,s2):
    l1 = []
    l2 = []
    for ss1 in s1:
        l1.append((1,ss1))
    for ss2 in s2:
        l2.append((2,ss2))
    l = l1+l2
    l = sorted(l, key=lambda x: x[1])
    for ll in l:
        print ll[0],':',ll[1]

def printUnion(so1,so2):
    s0 = so1.intersection(so2)
    s1 = so1.difference(so2)
    s2 = so2.difference(so1)
    l0 = []
    l1 = []
    l2 = []
    for ss0 in s0:
        l0.append((0,ss0))
    for ss1 in s1:
        l1.append((1,ss1))
    for ss2 in s2:
        l2.append((2,ss2))
    l = l0+l1+l2
    l = sorted(l, key=lambda x: x[1])
    for ll in l:
        print ll[0],':',ll[1]



def main():
    if len(sys.argv) < 4:
        help_message()
        return 

    fn1 = sys.argv[1]
    fn2 = sys.argv[2]
    option = sys.argv[3]
    
    s1 = toSet(fn1)
    s2 = toSet(fn2)

    if option == 'i':
        printSet(s1.intersection(s2))
    elif option == 'u':
        printUnion(s1,s2)
    elif option == 'd':
        printDiff(s1.difference(s2),s2.difference(s1))


if __name__ == '__main__':
    main()
